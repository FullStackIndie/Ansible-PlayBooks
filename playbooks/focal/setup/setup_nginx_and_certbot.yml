- hosts: a2hosting
  become: true
  vars:
    domains:
      - blog.fullstackindie.net
      - crittertracker.fullstackindie.net
      - identity.fullstackindie.net
      - gateway.fullstackindie.net
      - frp.fullstackindie.net
      - crowdsec.fullstackindie.net
      # fullstackindie.net
  tasks:
    - name: Create required Nginx dirs
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: directory
        owner: root
        mode: 0755
      loop:
        - { "path": "/etc/nginx/conf.d" }
        # - { "path": "/etc/nginx/conf.d/streams" }
        - { "path": "/etc/nginx/modules-enabled" }
        - { "path": "/etc/nginx/modules-available" }
        - { "path": "/etc/nginx/open-telemetry" }
        - { "path": "/etc/apache2" }

    - name: Copy Otel config for Nginx Open Telemetry
      ansible.builtin.copy:
        src: /home/murph/workspace/nginx/otelcollector/otel_config.toml
        dest: /etc/nginx/open-telemetry
        force: true
        backup: true
        owner: root
        mode: 0755

    - name: Copy Otel Module for Nginx Open Telemetry
      ansible.builtin.copy:
        src: /home/murph/workspace/nginx/otelcollector/otel_ngx_module.so
        dest: /usr/local/nginx/modules
        force: true
        backup: true
        owner: root
        mode: 0755

    - name: Copy Nginx config
      ansible.builtin.copy:
        src: /home/murph/workspace/nginx/nginx.conf
        dest: /etc/nginx
        force: true
        backup: true
        owner: root
        mode: 0755

    - name: Copy Nginx configs
      ansible.builtin.copy:
        src: /home/murph/workspace/nginx/conf.d/
        dest: /etc/nginx/conf.d/
        force: true
        backup: true
        owner: root
        mode: 0755

    - name: Copy Nginx Module Configs
      ansible.builtin.copy:
        src: /home/murph/workspace/nginx/modules-available/
        dest: /etc/nginx/modules-enabled/
        force: true
        owner: root
        mode: 0755

    - name: Copy Naxsi Rules
      ansible.builtin.copy:
        src: /home/murph/workspace/nginx/naxsi/naxsi.rules
        dest: /etc/nginx
        force: true
        owner: root
        mode: 0755


    - name: Copy Nginx Service
      ansible.builtin.copy:
        src: /home/murph/workspace/nginx/nginx.service
        dest: /etc/systemd/system
        force: false
        backup: true
        owner: root
        mode: 0755

    - name: Copy GeoIp2 Config
      ansible.builtin.copy:
        src: /home/murph/workspace/nginx/GeoIP.conf
        dest: /etc/GeoIP.conf
        force: true
        backup: true
        owner: root
        mode: 0755

    - name: Update GeoIP2
      become: true
      shell: sudo geoipupdate

    - name: Ensure cronjob for MaxMind GeoIp Update
      ansible.builtin.cron:
        name: "check dirs"
        minute: "0"
        hour: "1,12"
        weekday: "1,3"
        job: "/usr/local/bin/geoipupdate"

    - name: Enable service Nginx and ensure it is not masked
      ansible.builtin.systemd:
        name: nginx
        enabled: true
        masked: no

    - name: Just force systemd to reread configs (2.4 and above)
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Install Certbot
      apt:
        pkg:
          - certbot
          - python3-certbot-nginx
        state: latest
        update_cache: true

    - name: Register certbot
      shell: |
        certbot -n register --agree-tos --email fortheone.dev@gmail.com
        touch /etc/letsencrypt/.registered
      args:
        creates: /etc/letsencrypt/.registered

    - name: Setup cronjob for renewal
      cron:
        name: certbot-renewal
        job: "/bin/bash -lc '/usr/local/bin/certbot -q renew'"
        minute: "0"
        hour: "14"

    - name: 'Get certificates for Copied Nginx Configs and Known/Common Websites with Registered Domains'
      become: true
      command: 'certbot -n --nginx certonly -d {{ item }}'
      args:
        creates: '/etc/letsencrypt/live/{{ item }}'
      ignore_errors: true
      loop: "{{ domains }}"

    - name: Remove Apache because it also uses port 80
      apt:
        pkg:
          - apache2
          - apache2-bin
          - apache2-data
          - apache2-doc
        state: absent
        purge: true
        update_cache: true

    - name: Make sure Nginx service unit is running
      ansible.builtin.systemd:
        daemon_reload: true
        state: started
        name: nginx

    - name: Restart Nginx service
      ansible.builtin.systemd:
        state: restarted
        name: nginx

    - name: Apache Utils for Nginx Basic Auth
      apt:
        pkg:
          - apache2-utils
        state: latest
        update_cache: true

    - name: Setup FullStackIndie Admin Dashboard Password
      become: true
      command: 'sudo htpasswd -c /etc/apache2/.htpasswd {{ fullstackindie_admin_dashboard_password }}'