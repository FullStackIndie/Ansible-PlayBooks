- hosts: a2hosting
  become: true
  vars_prompt:
  - name: frp_type
    prompt: Setup frps or frpc? (frps = server, frpc = client)
    private: false
  - name: user
    prompt: What is your username?
    private: false
    
  vars:
    frp_version: 0.51.0
    frp_folder: "frp"
    frp_install_dir: "/opt/{{ frp_folder }}"

  tasks:
    - name: Create required FRP dirs to Compile needed Modules
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: directory
        owner: devops
        mode: 0755
      loop:
        - { "path": "{{ frp_install_dir }}" }

    - name: Downloading FRP source
      get_url:
        url: "https://github.com/fatedier/frp/releases/download/v{{ frp_version }}/frp_{{ frp_version }}_linux_amd64.tar.gz"
        dest: "{{ frp_install_dir }}/{{ frp_folder }}.tar.gz"
      register: frp_source

    - name: Unpacking FRP Proxy
      unarchive:
        copy: false
        dest: "{{ frp_install_dir }}"
        src: "{{ frp_source.dest }}"
        owner: root
      when: frp_source.changed

    - name: Copy FRP to new {{ frp_install_dir }}
      ansible.builtin.copy:
        src: /opt/frp/frp_{{ frp_version }}_linux_amd64/
        dest: /opt/frp
        force: true
        owner: root
        mode: 0755
        remote_src: true

    - name: Remove old Frp files
      file: 
        path: /opt/frp/frp_{{ frp_version }}_linux_amd64/
        state: absent

    - name: Copy FRP Proxy Service
      ansible.builtin.copy:
        src: /home/murph/workspace/frp/{{ frp_type }}.service
        dest: /etc/systemd/system/
        force: true
        owner: root
        mode: 0755

    - name: Copy FRP Proxy Configs
      ansible.builtin.copy:
        src: /home/murph/workspace/frp/{{ frp_type }}.ini
        dest: "{{ frp_install_dir }}"
        force: true
        backup: true
        owner: root
        mode: 0755

    - name: Open FRP ports and reload UFW
      become: true
      shell: |
        sudo ufw allow 7000
        sudo ufw reload

    - name: Enable service FRP Proxy and ensure it is not masked
      ansible.builtin.systemd:
        name: "{{ frp_type }}"
        enabled: true
        masked: no

    - name: Just force systemd to reread configs
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Make sure FRP Proxy service unit is running
      ansible.builtin.systemd:
        daemon_reload: true
        state: restarted
        name: "{{ frp_type }}"
