- hosts: a2hosting
  become: true
  vars:
    sitemap_version: 1.4.1

  tasks:
    - name: Create required dirs
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: directory
        owner: www-data
        mode: 0755
      loop:
        - { "path": "/opt/sitemap" }

    - name: Downloading SiteMap-Generator source
      get_url:
        url: "https://github.com/FullStackIndie/sitemap-generator/archive/refs/tags/v{{ sitemap_version }}.tar.gz"
        dest: "/tmp"
      register: sitemap_source

    - name: Unpacking SiteMap-Generator source
      unarchive:
        copy: false
        dest: "/tmp/"
        src: "{{ sitemap_source.dest }}"
        owner: root
      when: sitemap_source.changed

    - name: Move SiteMapGenerator project
      copy:
        remote_src: true
        src: /tmp/sitemap-generator-{{ sitemap_version }}/
        dest: /opt/sitemap

    - name: Install Dotnet
      ansible.builtin.apt:
        pkg:
          - dotnet-sdk-7.0
        state: latest
        update_cache: true

    - name: Build SiteMapGenerator
      become: true
      shell: |
        dotnet publish SiteMapGenerator.csproj -c Release -r linux-x64 -o ./build
      args:
        chdir: "/opt/sitemap"

    - name: Copy and Rename SiteMapGenerator
      copy:
        remote_src: true
        src: /opt/sitemap/build/SiteMapGenerator
        dest: /opt/sitemap/build/sitemap

    - name: Remove SiteMapGenerator
      ansible.builtin.file:
        path: /opt/sitemap/SiteMapGenerator
        state: absent
        mode: 0755

    - name: Add Sitemap Generator to bin with symlink
      ansible.builtin.file:
        src: /opt/sitemap/build/sitemap
        path: /usr/bin/sitemap
        state: link
        mode: 0755


    - name: Run SiteMapGenerator for Portfolio
      become: true
      shell: |
        sitemap https://portfolio.fullstackindie.net/ -p . -f Daily -L Debug
      args:
        chdir: "/var/www/html/portfolio/Portfolio/SEO"

    - name: Invalidate CloudFront Cache Keys
      shell: |
        aws cloudfront create-invalidation --distribution-id {{ cloudfront_portfolio_id }} \
        --paths "/Portfolio/*"
      environment:
        - AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
        - AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
        - AWS_REGION: "{{ aws_region }}"

    - name: Make sure Nginx service unit is running
      ansible.builtin.systemd:
        daemon_reload: true
        state: reloaded
        name: nginx
